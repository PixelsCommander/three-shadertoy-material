!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("three")):"function"==typeof define&&define.amd?define(["three"],t):"object"==typeof exports?exports.ShaderToyMaterial=t(require("three")):e.ShaderToyMaterial=t(e._)}(this,function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(t,n){t.exports=e},function(e,t){e.exports="#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\n\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\nvarying vec2 vUv;\nvoid main () {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUv=uv;\n}"},function(e,t){e.exports="precision highp float;\n#define GLSLIFY 1\nuniform vec2 iResolution;\nuniform float iTime;\nvarying vec2 vUv;\nvoid  mainImage( out vec4,  vec2 fragCoord );\nvoid main () {\n    vec4 outfrag;\n    mainImage(outfrag,iResolution*vUv);\n    gl_FragColor = outfrag;\n}"},function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return f});var r=n(0),o=n(1),i=n.n(o),a=n(2),u=n.n(a);class f extends r.RawShaderMaterial{constructor(e,t){var n=t||{};n.aspectRatio=n.aspectRatio||2;let o=1500/n.aspectRatio;var a=u.a+"\n"+e,f=new r.Clock;super({vertexShader:i.a,fragmentShader:a,uniforms:{iTime:{type:"1f",value:f.getElapsedTime()},iResolution:{value:new r.Vector2(1500,o)}}}),this.clock=f,this.registerUpdate()}registerUpdate(){this.update()}update(){this.uniforms.iTime.value=this.clock.getElapsedTime(),requestAnimationFrame(()=>{this.update()})}}}]).default});